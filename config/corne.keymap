#define ZMK_MOUSE_DEFAULT_SCRL_VAL 35 // 10

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};

/ {
    macros {
        flash_macro: flash_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bootloader>;
        };

        alt_f4: alt_f4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(F4)>;
            label = "ALT_F4";
        };

        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp TAB>;
            label = "NEW_MACRO";
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
        };

        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
        };

        rgb_encoder: rgb_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_ENCODER";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
        };

        scroll_encoder: scroll_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <30>;
        };
        alt_tab: alt_tab {
            compatible = "zmk,behavior-tap-dance";
            label = "ALT_TAB";
            #binding-cells = <0>;
            bindings = <&kp LA(TAB)>, <&kp LC(LA(TAB))>;

            tapping-term-ms = <100>;
        };
    };

    combos {
        compatible = "zmk,combos";
    };

    keymap {
        compatible = "zmk,keymap";

        Qwery {
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E         &kp R  &kp T        &mmv MOVE_UP     &kp Y        &kp U  &kp I          &kp O    &kp P     &kp ESCAPE
&kp LEFT_SHIFT  &kp A  &kp S  &kp D         &kp F  &kp G        &mmv MOVE_DOWN   &kp H        &kp J  &kp K          &kp L    &kp SEMI  &kp SQT
&kp LCTRL       &kp Z  &kp X  &kp C         &kp V  &kp B        &mmv MOVE_LEFT   &kp N        &kp M  &kp COMMA      &kp DOT  &kp FSLH  &kp LEFT_ALT
                       &to 1  &kp LEFT_GUI  &mo 2  &kp SPACE    &mmv MOVE_RIGHT  &lt 4 ENTER  &mo 3  &kp BACKSPACE
            >;

            label = "Qwery";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Navi {
            bindings = <
&alt_tab  &trans  &trans     &trans     &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans    &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans    &trans  &trans     &trans     &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                  &to 0      &trans     &trans     &trans    &trans  &trans  &trans  &trans
                                                             &trans
            >;

            sensor-bindings = <&inc_dec_kp RIGHT_ARROW LEFT_ARROW>;
            label = "Navi";
        };

        Symbol {
            bindings = <
&trans  &none     &kp N7     &kp N8  &kp N9  &kp PAGE_UP      &mmv MOVE_UP     &none     &none     &none   &none      &alt_f4   &trans
&trans  &none     &kp N4     &kp N5  &kp N6  &kp PAGE_DOWN    &mmv MOVE_DOWN   &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp HOME  &trans
&trans  &kp CAPS  &kp N1     &kp N2  &kp N3  &kp N0           &mmv MOVE_LEFT   &none     &none     &none   &none      &kp END   &trans
                  &mkp LCLK  &trans  &trans  &trans           &mmv MOVE_RIGHT  &kp INS   &kp DEL   &trans
            >;

            label = "Symbol";
        };

        Modify {
            bindings = <
&trans  &kp EXCL   &kp AT     &kp HASH      &kp DLLR   &kp PRCNT    &mmv MOVE_UP     &kp CARET  &kp AMPS   &kp LPAR  &kp RPAR  &kp ASTRK  &trans
&trans  &kp MINUS  &kp PLUS   &kp ASTERISK  &kp SLASH  &kp TILDE    &mmv MOVE_DOWN   &none      &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH   &trans
&trans  &none      &none      &none         &none      &kp GRAVE    &mmv MOVE_LEFT   &kp UNDER  &none      &kp LBRC  &kp RBRC  &kp PIPE   &trans
                   &mkp LCLK  &trans        &trans     &trans       &mmv MOVE_RIGHT  &kp RET    &trans     &trans
            >;

            label = "Modify";
        };

        Flash {
            bindings = <
&flash_macro  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5     &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
&trans        &kp F6   &kp F7   &kp F8  &kp F9  &kp F10    &trans  &trans        &bt BT_SEL 1       &out OUT_USB        &trans        &trans        &trans
&trans        &kp F11  &kp F12  &trans  &trans  &trans     &trans  &bt BT_CLR    &trans        &trans        &trans        &trans        &bt BT_CLR_ALL
                       &trans   &trans  &trans  &trans     &trans  &trans        &trans        &trans
                                                           &trans
            >;

            label = "Flash";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Flash {
            if-layers = <3 2>;
            then-layer = <4>;
        };
    };
};
